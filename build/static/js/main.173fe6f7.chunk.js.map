{"version":3,"sources":["components/FormContact/FormContact.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts-actions.js","services/api.js","redux/contacts-operations.js","redux/contacts-reducer.js","redux/store.js","redux/contacts-selectors.js","components/FormContact/FormContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","filterContact","createAction","fetchContacts","a","axios","get","data","addContact","name","number","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_value","rejectWithValue","contactsAPI","message","contact","items","createReducer","fulfilled","_state","payload","state","filter","loading","pending","rejected","error","console","log","combineReducers","store","configureStore","reducer","contacts","contactsReducer","getItems","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","FormContact","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","resetState","onSubmit","e","preventDefault","find","item","duplicateValidator","operations","toast","warn","className","s","inputWrapper","label","type","onChange","pattern","title","required","formButton","ContactList","useEffect","map","contactItem","contactButton","onClick","Filter","actions","App","wrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.173fe6f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"FormContact_inputWrapper__ai5tq\",\"label\":\"FormContact_label__338db\",\"formButton\":\"FormContact_formButton__25UAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3ZVaw\",\"title\":\"App_title__3A3TC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__oLIXI\",\"contactButton\":\"ContactList_contactButton__1OstF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2LS9C\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contacts/changeFilter');\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://61f9766b69307000176f7286.mockapi.io';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n\n  return data;\n}\n\nexport async function addContact(name, number) {\n  const { data } = await axios.post(`/contacts`, {\n    name,\n    number,\n  });\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","import * as contactsAPI from '../../src/services/api';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/FetchContacts',\n  async (_value, { rejectWithValue }) => {\n    try {\n      return await contactsAPI.fetchContacts();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/AddContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      return await contactsAPI.addContact(name, number);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/Delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      const contact = await contactsAPI.deleteContact(id);\n      return contact.id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { filterContact } from './contacts-actions';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst contactsInitial = [];\n\nconst items = createReducer(contactsInitial, {\n  [fetchContacts.fulfilled]: (_state, { payload }) => payload,\n\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: error => console.log(error),\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: error => console.log(error),\n  [addContact.pending]: () => null,\n  [deleteContact.rejected]: error => console.log(error),\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  getItems,\n  getFilter,\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as operations from '../../redux/contacts-operations';\nimport { getItems } from '../../redux/contacts-selectors';\nimport s from './FormContact.module.css';\n\nfunction FormContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name => items.find(item => item.name === name);\n\n    duplicateValidator(name)\n      ? toast.warn(`${name} is already in your phonebook`)\n      : dispatch(operations.addContact({ name, number }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.inputWrapper}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n      </div>\n      <div className={s.inputWrapper}>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default FormContact;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as operations from '../../redux/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul>\n      {items.map(({ id, name, number }) => (\n        <li className={s.contactItem}>\n          <span>{name}:</span>\n          <span>{number}</span>\n          <button\n            className={s.contactButton}\n            type=\"button\"\n            onClick={() => dispatch(operations.deleteContact(id))}\n          >\n            Delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport * as actions from '../../redux/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(actions.filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.label}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import FormContact from '../FormContact';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport s from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.wrapper}>\n      <h1 className={s.title}>Phonebook</h1>\n      <FormContact />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}